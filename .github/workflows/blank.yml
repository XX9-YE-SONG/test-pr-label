name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  push-test:
    if: github.ref_name != 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Run a one-line script
        run: echo push to test repo

  push-test-pr:
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    env:
      PR_LABELS_JSON: ${{ toJson(github.event.pull_request.labels) }}
    steps:
      - name: Run a multi-line script
        run: |
          echo "PR Labels"
          echo "PR_LABELS_JSON=${PR_LABELS_JSON}"


  push-prod:
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    env:
      PR_LABELS_JSON: ${{ toJson(github.event.pull_request.labels) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run a multi-line script
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          MERGE_COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "Merge Commit Message: $MERGE_COMMIT_MESSAGE"
          PR_ID=$(echo "$MERGE_COMMIT_MESSAGE" | grep -oP 'Merge pull request #\K\d+' || true)
          if [ -n "$PR_ID" ]; then
            echo "Extracted Pull Request ID: $PR_ID"
          else
            echo "::error::Could not find a Pull Request ID in the merge commit message. This job requires a PR ID to proceed."
            exit 1 # Fail the step and thus the job
          fi
          PR_LABELS=$(gh pr view "$PR_ID" --json labels --jq '.labels[].name' | tr '\n' ',' | sed 's/,$//')
          if [ -n "$PR_LABELS" ]; then
            echo "PR Labels: $PR_LABELS"
          else
            # Print the error message to the log before exiting
            echo "::error::No labels found for Pull Request #$PR_ID. This job requires labels to proceed."
            exit 1 # Fail the step and thus the job
          fi
